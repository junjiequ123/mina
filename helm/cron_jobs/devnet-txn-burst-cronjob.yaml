# kubectl apply -f helm/cron_jobs/devnet-txn-burst-cronjob.yaml
# the above command, with this accompanying file, needs only be run once.  it does not get run in CI.  this file is provided here for future reference
# make sure you're in devnet2
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: devnet-txn-burst-cronjob
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - '

mina daemon --generate-genesis-proof true --peer-list-url https://storage.googleapis.com/seed-lists/devnet_seeds.txt --background;
sleep 480;echo "done sleeping";
while true; do
  STATUS=$(mina client status | grep "Sync status");
  echo "$STATUS" | grep "Synced";
  RESULT=$?;
  if [ $RESULT -eq 0 ]; then
    echo "daemon is synced";
    break;
  else
    echo "waiting for daemon to sync";
    sleep 60;
  fi;
done;

mkdir /tmpkeys;
chmod 700 /tmpkeys;
cp /keys/key /tmpkeys;
chmod 600 /tmpkeys/key;
export MINA_PRIVKEY_PASS="naughty blue worm";
echo $MINA_PRIVKEY_PASS;
./_build/default/src/app/batch_generate_keys/batch_generate_keys.exe gen-there-and-back-txns --num-accts 1 --num-txn-per-acct 10 --origin-sender-sk-path /tmpkeys/key --origin-sender-sk-pw "naughty blue worm" > txn_burst.sh;
chmod 777 txn_burst.sh;

echo "ran batch gen keys";
cat txn_burst.sh;
./txn_burst.sh;

while true; do echo looping; sleep 10; done;
            '
            
            env:
            - name: MINA_PRIVKEY_PASS
              value: ""
            - name: GCLOUD_KEYFILE
              value: /gcloud/keyfile.json
            image: gcr.io/o1labs-192920/mina-txn-burst-app@sha256:3a03c63a4c10d8b3897c88ca0e0cc88c6d58b24c0da36a58a13d2bfc2c266582
            imagePullPolicy: IfNotPresent
            name: devnet-txn-burst-cronjob
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /keys/
              name: private-keys
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes: [
            {
              "name": "private-keys",
              "secret": {
                "defaultMode": 0600,
                "items": [
                  {
                    "key": "key",
                    "path": "key"
                  },
                  {
                    "key": "pub",
                    "path": "key.pub"
                  }
                ],
                "secretName": "online-whale-account-1-key"
              }
            }
          ]
  schedule: 0 0 * * *
  successfulJobsHistoryLimit: 3
  suspend: false
